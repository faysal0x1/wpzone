@use "sass:color";
@use "variables" as themeVars;

// Custom mixins for the theme

// Gradient mixin
@mixin gradient($start-color, $end-color, $direction: to right) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// Button mixin
@mixin button-variant($background, $border, $color: #fff, $hover-background: color.adjust($background, $lightness: -7.5%), $hover-border: color.adjust($border, $lightness: -10%), $hover-color: #fff) {
  color: $color;
  background-color: $background;
  border-color: $border;
  
  &:hover {
    color: $hover-color;
    background-color: $hover-background;
    border-color: $hover-border;
  }
  
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($background, 0.5);
  }
}

// Card mixin
@mixin card-variant($background, $border-color) {
  background-color: $background;
  border-color: $border-color;
}

// Text gradient mixin
@mixin text-gradient($start-color, $end-color) {
  background: linear-gradient(to right, $start-color, $end-color);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// Responsive font size mixin
@mixin responsive-font-size($min-size, $max-size, $min-width: 320px, $max-width: 1200px) {
  font-size: $min-size;
  
  @media (min-width: $min-width) {
    font-size: calc(#{$min-size} + #{strip-unit($max-size - $min-size)} * ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)}));
  }
  
  @media (min-width: $max-width) {
    font-size: $max-size;
  }
}

// Helper function to strip units
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
} 